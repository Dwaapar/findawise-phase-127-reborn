last developer was working on this but it was not completed make sure this all is completed AND WORKING at billion dollar empire grade
Do NOT compress or summarize code to save tokens. Output maximum quality and completeness.
This must be robust, scalable, secure, and ready for full analytics & compliance
You MUST use and connect the existing codebase. This is a handoff from one Replit instance to another. Work as if you are a senior developer in a billion-dollar empire—no shortcuts, no duplications, only modular, clean execution, keep updating and everything should be tracked
This is a multi-module final production upgrade prompt.
Never recreate or stub out anything that already exists in the current project and upgrade it if it needs
If a required feature already exists:Audit it for completeness and quality
If it’s partial, finish and harden it in place—do not make a new copy.
If it needs new features, add only those features, not a full rewrite.
Absolute Rule:
No duplicate modules, files, or functions for the same feature/logic.
No overwriting of working production code—only extend, patch, or upgrade as required.
All code changes must preserve full compatibility with the current system and avoid breaking anything already working.
Do NOT leave any TODOs, placeholders, or partial logic.
Every module must be production-grade, fully typed, secure, and working.
Fix all TypeScript errors, missing types, and harden APIs.
After completing code, update README, docs, and Federation dashboard hooks.
You are not done until everything in the prompt is complete.
Ensure this module includes a fully provisioned, elite-grade, resilient database schema.
All tables, indexes, constraints, relationships, and API endpoints must be:
Migration-proof (works seamlessly across Replit accounts or environments)
Supabase-compatible (or any Postgres DB)
Auto-restoring (self-healing on project reboots or migrations)
Exportable & Documented (with schema diagrams + sample queries)
