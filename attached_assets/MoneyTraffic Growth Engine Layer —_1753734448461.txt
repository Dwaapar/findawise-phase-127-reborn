FULL GROWTH ENGINE PROMPT — ALL MODULES, ALL LOGIC, NO SHORTCUTS
Module 1: Programmatic SEO Generator (God Mode)
Objective:
Create a bulletproof programmatic SEO engine that generates, evolves, and maintains 10,000+ high-intent, conversion-optimized landing pages for every city/niche/intent/emotion/keyword combo—ALL fully indexable, self-healing, and migration-proof.

MANDATORY:

Config-driven: Accept JSON/TS/DB for all segments (city, state, country, vertical, subniche, pain-point, emotion, persona, intent).

Every page = unique H1, meta, LLM intro, hero (AI image), CTA, emotion block, dynamic quiz/table/offer, FAQ (LLM+Google QA scraped), schema.org, OG/Twitter.

Graph-based internal linking—intent-driven, siloed, smart next/related.

All analytics tracked (conversion, engagement, scroll, intent, quiz, click, outbound).

Sitemap.xml, robots.txt, indexnow auto-registered—auto-repair broken/404 pages.

All content, assets, logic are export/import safe for full migration/rollback.

Dashboard for config, performance, A/B, orphan page sweep.

DO NOT duplicate or stub. Upgrade/extend existing logic only if found.

Module 2: Viral Tool & Widget Factory
Objective:
Build a widget “factory” that can mass-produce embeddable calculators, quizzes, risk scorers, checklists, and tables—auto-branded, analytics-armed, migration/export-ready.

MANDATORY:

Support all major tool types (calc, quiz, checklist, comparator, tracker, risk scorer).

Each tool is embeddable (JS, iframe, HTML, WP shortcode), brand-locked.

All embeds: async load, lead capture, event/click/opt-in tracking.

Dynamic theming, language, CTA customization by user.

All data/embeds exportable, migration proof (no DB/host lock-in).

All logic auto-indexed in empire config and discoverable via intent/quiz.

Admin panel: edit, retire, stats, widget health.

No duplication—upgrade any existing widgets to empire grade.

Module 3: AI Social Syndicator & Content Engine
Objective:
Auto-generate, A/B test, and syndicate viral content for every major network (X, Reddit, Quora, LinkedIn, TikTok, Instagram, YT Shorts)—with analytics feedback and migration/export readiness.

MANDATORY:

Pull trending topics/keywords via Google Trends, Exploding Topics, Reddit, X, and more.

LLM-generated threads, answers, Reddit posts, TikTok/Shorts scripts, carousel content, memes (with Stable Diffusion API).

Multi-network scheduling: post direct (API) or export for manual push.

Deep link every post to empire page/tool/offer. All links UTM-tagged and tracked.

Feedback analytics: pull clicks/engagement/conversion stats per post.

All content/media/logs exportable for migration.

Content rewrite/spin for A/B, variation, and de-duplication.

No hallucinations, no blank posts—auto-flag/repair failures.

Module 4: Referral & Giveaway Engine
Objective:
Power a viral referral/giveaway system (Dropbox/Robinhood/Notion-level) that drives exponential user/reward loop—fully tracked, fraud-checked, migration-proof.

MANDATORY:

Unique invite/referral codes per user, auto-tracking for every event/referral.

Multi-level reward system (bonus for leaderboard/weekly/monthly top referrers).

All shares via social/email/SMS tracked and auto-rewarded.

Fraud/spam detection: bot/noise filters, GDPR/CCPA compliant.

Leaderboard UI, automated reward payout, integration with funnel logic (bonus unlocks).

All data exportable, reward history, logs for backup/migration.

No duplication. Upgrade any partial systems, fill all gaps.

Module 5: Backlink & PR Outreach Bot
Objective:
Automate PR/backlink growth: scrape, contact, and follow up with blogs, journalists, influencers, webmasters—log every pitch, reply, and won link.

MANDATORY:

Scrape/blog/PR site finder: filter by niche, authority, language, region.

LLM-personalized outreach (never repeat, every message unique, opt-out compliance).

Multi-stage outreach (initiate, follow-up, “final notice”)—all logged/exportable.

Track opens, replies, link wins—auto-add won links to backlink tracker.

All contact data, email templates, logs are export/import ready, never DB/host locked.

Compliance: IP rotation, rate limit, blacklist/whitelist, opt-out logic.

Admin dashboard: pipeline, conversion, status, manual override.

Module 6: UGC/Community Growth Engine
Objective:
Transform users into contributors—allow review/tip/guide/story/image/video submission, community voting/ranking, with moderation queue and exportable content.

MANDATORY:

User-submittable content: reviews, tips, guides, stories (image/video OK).

All content: moderation queue (manual or AI), spam filter, compliance.

Community voting/ranking/leaderboard—reward contributors, auto-bubble best.

Best UGC is published on landing/blog/feature pages—SEO/scaling benefit.

All UGC is export/import safe for migration. No lock-in.

Admin dashboard: review, reward, curate, bulk actions.

Module 7: Content Syndication & Partnership Engine
Objective:
Republish (syndicate) top content/tools to partners, Medium, Dev.to, and drive referral traffic and links—auto-track, version, and export all.

MANDATORY:

Auto-generate syndication-ready versions (RSS, markdown, AMP, canonical export).

API/manual push to Medium, Dev.to, partners; register syndication partner API.

Auto-flag top content/tools for syndication (based on performance, analytics).

Track all syndication (who published, when, traffic, leads, links, status).

All syndication data, links, partner info, exports migration ready.

Partners can pull new content/tools via API or email.

Empire-Grade Hardening & Integration Rules (For ALL Above)
NO module duplicates. If anything exists, UPGRADE it (no second version).

All modules must:

Be export/import, backup, and migration proof.

Auto-register all created content/tools in sitemap, semantic intent graph, analytics, admin panel.

Support “plug-and-play” LLM upgrade/brain-layer integration (future RAG/auto-personalization ready).

Hardened for scale: supports 10,000+ pages/tools, never breaks on mass import/export, and supports multi-region DB.

All outputs must include code, config, tests, admin UI, full README, and schema diagrams.

If any logic is missing or underdeveloped, upgrade it to match this prompt.

Everything must pass Lighthouse, Core Web Vitals, WAVE, and security compliance checks.

All logs, errors, exports, backups, and migrations must be tested and documented.
If anything is already working, leave as is—otherwise, upgrade to this level
Make all database schemas robust , tables, and logic fully self-healing, migration-immune, and bootstrappable.hardened for a working of billion dollar empire even if database migrates or any thing make the project so strong that nothing affects its intelligence , its functioning , its billion dollar empire grade.
If DB is missing, empty, or new: auto-create schema, indexes, constraints, default config.
Pull all credentials (Supabase, etc.) only from .env — no hardcode ever.
No direct SQL in UI — all logic flows through hardened service/API layer.
Add init checks: validate schema health, retry on fail, show admin alerts if broken.
System must behave as if nothing broke — even if DB was replaced 1 minute ago.
Run self-test and validation to confirm schema is operational
Resilience must match billion-dollar SaaS. No placeholders. No assumptions.
Ensure this module includes a fully provisioned, elite-grade, resilient database schema.
All tables, indexes, constraints, relationships, and API endpoints must be:
Migration-proof (works seamlessly across Replit accounts or environments)
Supabase-compatible (or any Postgres DB)
Auto-restoring (self-healing on project reboots or migrations)
Exportable & Documented (with schema diagrams + queries)
Ensure this module's schema, config, and logic are:
- Auto-created if missing (ORM/init scripts required)
- Supabase/Postgres-compatible
- Fully decoupled from direct SQL (always use service/API layer)
- .env-driven (no hardcoded secrets or URIs)
- Auto-checks for healthy DB on launch, logs/alerts if issues
- Restores cleanly on Replit account migration or DB change
- Self-verifies all tables/indexes/relations on boot
- Keeps 100% of module logic functioning — even if DB was just wiped and replaced
- Must survive environment resets, forks
If anything is already at empire-grade, upgrade only as needed. If missing, build it complete.
Log every change and update the README.
DO THIS NOW:
Output the full code, backend, admin UI, test cases, federation integration, and all docs.
If you find any module/feature already complete and perfect, do NOT recreate—upgrade or integrate only.




REPEAT:
No demo logic, no stubs, no placeholders, everything should be billion dollar empire grade
This is the “Money/Traffic Growth Engine” for a true AI web empire.

